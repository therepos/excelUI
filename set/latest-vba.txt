Sub FormatData()

    Cells.Select
    Selection.ClearFormats
    With Selection.Font
        .Name = "Arial"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    With Selection.Font
        .Name = "Arial"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    Selection.Replace What:="  ", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False, FormulaVersion:=xlReplaceFormula2
    With Selection
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Columns("E:E").Select
    Selection.Style = "Comma"
    Columns("E:E").EntireColumn.AutoFit
    Columns("F:F").Select
    Selection.Style = "Percent"
    Columns("F:F").EntireColumn.AutoFit
    Range("I3").Select
    ActiveWindow.SmallScroll Down:=121
    Cells.Select
    Range("A122").Activate
    Cells.EntireRow.AutoFit
    Range("I129").Select
    ActiveWindow.SmallScroll Down:=-121
End Sub

Sub ReplaceXLOOKUPWithValues()
    Dim cell As Range
    Dim ws As Worksheet
    Set ws = ActiveSheet
    
    For Each cell In ws.UsedRange
        If cell.HasFormula Then
            If InStr(1, cell.Formula, "XLOOKUP", vbTextCompare) > 0 Then
                cell.Value = cell.Value
            End If
        End If
    Next cell
End Sub

Sub ImportCleanAndFillData()
    Dim sourceFile As Variant, monthInput As String
    Dim srcWB As Workbook, destWB As Workbook
    Dim srcWS As Worksheet, destWS As Worksheet
    Dim srcLastRow As Long, destLastRow As Long
    Dim srcDict As Object
    Dim i As Long, code As String, mtdValue As Variant
    Dim destCol As Long

    Set destWB = ThisWorkbook
    Set destWS = destWB.Sheets(1) ' Change if needed

    ' Ask for month (e.g., Jan, Feb)
    monthInput = InputBox("Enter 3-letter month (e.g., Jan, Feb):")
    If Len(monthInput) <> 3 Then
        MsgBox "Invalid month input."
        Exit Sub
    End If

    ' Prompt to load raw source file
    sourceFile = Application.GetOpenFilename("Excel Files (*.xlsx), *.xlsx", , "Select SET-SourceData file")
    If sourceFile = "False" Then Exit Sub

    Application.ScreenUpdating = False
    Set srcWB = Workbooks.Open(sourceFile)
    Set srcWS = srcWB.Sheets(1)

    ' --- CLEAN SOURCE FILE ---
    Call FormatDataSource(srcWS)

    ' --- DETERMINE MAPPING COLUMN ---
    Set srcDict = CreateObject("Scripting.Dictionary")
    srcLastRow = srcWS.Cells(srcWS.Rows.Count, "A").End(xlUp).Row
    For i = 6 To srcLastRow
        code = Trim(srcWS.Cells(i, 1).Value)
        mtdValue = srcWS.Cells(i, 5).Value ' Column E
        If Len(code) > 0 And Not IsEmpty(mtdValue) And IsNumeric(mtdValue) Then
            srcDict(code) = mtdValue
        End If
    Next i

    ' --- FIND DEST MONTH COLUMN ---
    On Error Resume Next
    destCol = destWS.Rows(1).Find(What:=monthInput, LookIn:=xlValues, LookAt:=xlWhole).Column
    On Error GoTo 0
    If destCol = 0 Then
        MsgBox "Month '" & monthInput & "' not found in final report."
        srcWB.Close False
        Exit Sub
    End If

    ' --- FILL DESTINATION FILE ---
    destLastRow = destWS.Cells(destWS.Rows.Count, 1).End(xlUp).Row
    For i = 2 To destLastRow
        code = Trim(destWS.Cells(i, 1).Value)
        If Len(code) > 0 And srcDict.exists(code) Then
            destWS.Cells(i, destCol).Value = srcDict(code)
        End If
    Next i

    srcWB.Close False
    Application.ScreenUpdating = True
    MsgBox "Data filled for " & monthInput & "."
End Sub

